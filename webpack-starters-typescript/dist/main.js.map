{"version":3,"sources":["webpack://webpack-starters/./src/index.ts"],"names":["woof","noise","_a","_b","console","log","one","two","three"],"mappings":"MAWA,SAASA,EAAKC,GACV,IAAIC,EAAIC,EAGRC,QAAQC,IAAI,0BAA2BJ,GAASA,EAAMK,KAAOL,EAAMK,IAAIC,KAAON,EAAMK,IAAIC,IAAIC,OAE5FJ,QAAQC,IAAI,0BAAiJ,QAArHF,EAAwE,QAAlED,EAAKD,aAAqC,EAASA,EAAMK,WAAwB,IAAPJ,OAAgB,EAASA,EAAGK,WAAwB,IAAPJ,OAAgB,EAASA,EAAGK,OAfrMJ,QAAQC,IADE,KAkBVL,EAAK,GACLI,QAAQC,IAAI,aACZL,EAlBU,CACNM,IAAK,CACDC,IAAK,CACDC,MAAO,c","file":"main.js","sourcesContent":["// Simple example showing that TS is compiling properly.\nvar dig = 132;\nconsole.log(dig);\nvar obj = {\n    one: {\n        two: {\n            three: \"awoooo\",\n        },\n    },\n};\n// The use of `any` is purely as an example here and should be avoided in real projects\nfunction woof(noise) {\n    var _a, _b;\n    // This should not throw errors but will return inconsistent results\n    // depending on input. e.g. `0` returns `0`, not `undefined`, even though it's falsey\n    console.log(\"I should make a noise: \", noise && noise.one && noise.one.two && noise.one.two.three);\n    // conditional chaining: outputs `undefined` if not given proper input\n    console.log(\"I should make a noise: \", (_b = (_a = noise === null || noise === void 0 ? void 0 : noise.one) === null || _a === void 0 ? void 0 : _a.two) === null || _b === void 0 ? void 0 : _b.three);\n}\nwoof(0);\nconsole.log(\"---------\");\nwoof(obj);\n"],"sourceRoot":""}